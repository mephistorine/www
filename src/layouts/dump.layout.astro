---
import "../global.css";
import { site } from "../static-data";
interface Props {
  title: string;
  description: string;
}
const { title, description } = Astro.props as Props;
---

<html lang="ru" class="text-[18px] sm:text-[16px]">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <title>{title} â€¢ {site.name}</title>

    <meta name="title" content={title} />
    <meta name="description" content={description} />

    <link rel="icon" type="image/png" href="/public/assets/favicon.png" />

    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content={Astro.url} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta
      property="og:image"
      content={new URL(
        "/public/site-social-preview-compressed.jpeg",
        Astro.url
      )}
    />

    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={Astro.url} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta
      property="twitter:image"
      content={new URL(
        "/public/site-social-preview-compressed.jpeg",
        Astro.url
      )}
    />
  </head>
  <body class="text-zinc-800 dark:text-slate-200 dark:bg-zinc-800">
    <slot />
    <script defer>
      function applyTheme(name) {
        const html = document.documentElement;

        const themeName =
          name === "SYSTEM"
            ? matchMedia("(prefers-color-scheme: light)").matches
              ? "LIGHT"
              : "DARK"
            : name;

        if (themeName === "DARK") {
          html.classList.add("dark");
        } else {
          html.classList.remove("dark");
        }
      }

      /** @type {HTMLSelectElement} */
      const themeSwitcher = document.querySelector("#theme-switcher");
      const mediaQueryList = matchMedia("(prefers-color-scheme: light)");

      mediaQueryList.addEventListener("change", (event) => {
        if (themeSwitcher.value !== "SYSTEM") {
          return;
        }

        applyTheme(event.matches ? "LIGHT" : "DARK");
      });

      themeSwitcher.addEventListener("change", () => {
        const themeName = themeSwitcher.value;
        applyTheme(themeName);
        localStorage.setItem("theme", themeName);
      });

      const theme = localStorage.getItem("theme") ?? "SYSTEM";
      themeSwitcher.value = theme;
      applyTheme(theme);
    </script>
  </body>
</html>
